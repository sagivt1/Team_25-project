pipeline {
    agent { docker { image 'maven:3.8.1' } }

    stages {
        stage('build') {
            steps {
                sh 'mvn --version'
                sh 'mvn package -Dmaven.test.skip=true'
            }
        }
        stage('test'){
            steps{
                sh 'mvn clean test'
            }
            post {
                always {
                   junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Code Coverage') {
             steps {
                 echo 'Code Coverage'
                 sh 'mvn clean clover:setup test clover:aggregate clover:clover'
                 step([
                     $class: 'CloverPublisher',
                     cloverReportDir: 'target/site',
                     cloverReportFileName: 'clover.xml',
                     healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80], // optional, default is: method=70, conditional=80, statement=80
                     unhealthyTarget: [methodCoverage: 50, conditionalCoverage: 50, statementCoverage: 50], // optional, default is none
                     failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]     // optional, default is none
                   ])
             }
        }

        stage('Package') {
               steps {
                   echo 'Packaging'
                   sh 'mvn package'
               }
        }
        stage('Deploy') {
                steps {
                    echo '## Deploy To Server ##'
                }
        }
    }

    post {
            always {
                echo 'JENKINS PIPELINE'
            }
            success {
                echo 'JENKINS PIPELINE SUCCESSFUL'
            }
            failure {
                echo 'JENKINS PIPELINE FAILED'
            }
            unstable {
                echo 'JENKINS PIPELINE WAS MARKED AS UNSTABLE'
            }
            changed {
                echo 'JENKINS PIPELINE STATUS HAS CHANGED SINCE LAST EXECUTION'
            }
        }
} 

